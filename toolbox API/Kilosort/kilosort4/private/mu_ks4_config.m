function [settings, opts] = mu_ks4_config(filenames, resultsDir, nCh, dtype, fs, th, badChs)
narginchk(5, 7);

if nargin < 6
    th = [9, 8];
end

if nargin < 7
    badChs = [];
end

chanMapRoot = fullfile(fileparts(which('initMATLABUtils')), 'config', 'kilosort config', 'chanMap');

switch dtype
    case 'i16'
        dtype = 'int16';
    case 'f32'
        dtype = 'float32';
end

params = {'filename', filenames, ...
          'results_dir', resultsDir, ...
          'fs', fs, ...
          'data_dtype', dtype, ...
          'bad_channels', badChs, ...
          'Th_universal', th(1), ...
          'Th_learned', th(2)};
switch nCh
    case 4      % 5*5*6*16 linear array
        otherparams = {'nblocks', 0, ...
                       'n_chan_bin', 32, ...
                       'probe_name', fullfile(chanMapRoot, 'chan5_5_6_16_kilosortChanMap.mat')};
    case 8      % 8*2 linear array
        otherparams = {'nblocks', 0, ...
                       'n_chan_bin', 16, ...
                       'probe_name', fullfile(chanMapRoot, 'chan8_2_kilosortChanMap.mat')};
    case 16     % 16*1 linear array
        otherparams = {'nblocks', 0, ...
                       'n_chan_bin', 16, ...
                       'probe_name', fullfile(chanMapRoot, 'chan16_1_kilosortChanMap.mat')};
    case 24     % 24*1 linear array
        otherparams = {'nblocks', 0, ...
                       'n_chan_bin', 24, ...
                       'probe_name', fullfile(chanMapRoot, 'chan24_1_kilosortChanMap.mat')};
    case 24.32  % 24*1 linear array
        otherparams = {'nblocks', 0, ...
                       'n_chan_bin', 32, ...
                       'probe_name', fullfile(chanMapRoot, 'chan24in32_1_kilosortChanMap.mat')};
    case 32     % 16*2 linear array
        otherparams = {'nblocks', 0, ...
                       'n_chan_bin', 32, ...
                       'probe_name', fullfile(chanMapRoot, 'chan16_2_kilosortChanMap.mat')};
    case 31     % 16*2 linear array
        otherparams = {'nblocks', 0, ...
                       'n_chan_bin', 32, ...
                       'probe_name', fullfile(chanMapRoot, 'chan16_2_1_kilosortChanMap.mat')};
    case 128    % RHD
        otherparams = {'nblocks', 5, ...
                       'n_chan_bin', 128, ...
                       'probe_name', fullfile(chanMapRoot, 'PKU128_kilosortChanMap.mat')};
    case 385    % Neuropixels
        otherparams = {'nblocks', 5, ...
                       'n_chan_bin', 385, ...
                       'probe_name', fullfile(chanMapRoot, 'neuropixPhase3B1_kilosortChanMap.mat')};
    otherwise
        error('Unsupported channel number %.2f', nCh);
end

params = [params, otherparams];
[settings, opts] = config_kilosort4(params{:});
return;
end